{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Check-In API",
        "contact": {},
        "license": {
            "name": "GPL-3.0"
        },
        "version": "1.0"
    },
    "paths": {
        "/all-locations": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/all-locations/checkins/day": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get all check-ins at location for a specified day in a specified format",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Location IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReturnType ('raw' or 'csv')",
                        "name": "returnType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date (format: 'yyyy-MM-dd')",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CheckInsLocationEntryRaw"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/all-locations/checkins/range": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get all check-ins at location for a specified range in a specified format",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Location IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ReturnType ('raw' or 'csv')",
                        "name": "returnType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "StartDate (format: 'yyyy-MM-dd')",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "EndDate (format: 'yyyy-MM-dd')",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CheckInsLocationEntryRaw"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "SignInDto",
                        "name": "signInDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignInDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign out a user",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/checkins": {
            "post": {
                "tags": [
                    "checkins"
                ],
                "summary": "Create check-in at location of logged in user",
                "parameters": [
                    {
                        "description": "CreateCheckInDto",
                        "name": "createCheckInDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCheckInDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CheckInDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/current-user": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get info of logged in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get all locations paginated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to fetch",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedLocationsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "locations"
                ],
                "summary": "Create location",
                "parameters": [
                    {
                        "description": "CreateLocationDto",
                        "name": "createLocationDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLocationDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get single location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "locations"
                ],
                "summary": "Update location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateLocationDto",
                        "name": "updateLocationDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLocationDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/locations/{id}/checkins": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get all checkins today",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CheckInDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/locations/{locationId}/checkins/{checkInId}": {
            "delete": {
                "tags": [
                    "locations"
                ],
                "summary": "Delete check-in that occured today",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Check-In ID",
                        "name": "checkInId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CheckInDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/schools": {
            "get": {
                "tags": [
                    "schools"
                ],
                "summary": "Get all schools paginated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to fetch",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedSchoolsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "schools"
                ],
                "summary": "Create school",
                "parameters": [
                    {
                        "description": "SchoolDto",
                        "name": "schoolDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchoolDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/School"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/schools/{id}": {
            "delete": {
                "tags": [
                    "schools"
                ],
                "summary": "Delete school",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/School"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "schools"
                ],
                "summary": "Update school",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SchoolDto",
                        "name": "schoolDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SchoolDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/School"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/state": {
            "get": {
                "tags": [
                    "state"
                ],
                "summary": "Get current state",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "state"
                ],
                "summary": "Update state",
                "parameters": [
                    {
                        "description": "StateDto",
                        "name": "stateDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users paginated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to fetch",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedUsersDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "CreateUserDto",
                        "name": "createUserDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get single user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateUserDto",
                        "name": "updateUserDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDto"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket for receiving update events",
                "parameters": [
                    {
                        "description": "SubscribeMessageDto",
                        "name": "subscribeMessageDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscribeMessageDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LocationUpdateEvent"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CheckInDto": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locationId": {
                    "type": "string"
                },
                "schoolName": {
                    "type": "string"
                }
            }
        },
        "CheckInsLocationEntryRaw": {
            "type": "object",
            "properties": {
                "capacities": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "schools": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "CreateCheckInDto": {
            "type": "object",
            "properties": {
                "schoolId": {
                    "type": "integer"
                }
            }
        },
        "CreateLocationDto": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "CreateUserDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ErrorDto": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {},
                "status": {
                    "type": "integer"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "availableYesterday": {
                    "type": "integer"
                },
                "capacity": {
                    "type": "integer"
                },
                "capacityYesterday": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "yesterdayFullAt": {
                    "type": "string"
                }
            }
        },
        "LocationUpdateEvent": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "availableYesterday": {
                    "type": "integer"
                },
                "capacity": {
                    "type": "integer"
                },
                "capacityYesterday": {
                    "type": "integer"
                },
                "normalizedName": {
                    "type": "string"
                },
                "yesterdayFullAt": {
                    "type": "string"
                }
            }
        },
        "PaginatedLocationsDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Location"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            }
        },
        "PaginatedSchoolsDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/School"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            }
        },
        "PaginatedUsersDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination"
                }
            }
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "Role": {
            "type": "string",
            "enum": [
                "default",
                "manager",
                "admin"
            ],
            "x-enum-varnames": [
                "DefaultRole",
                "ManagerRole",
                "AdminRole"
            ]
        },
        "School": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                }
            }
        },
        "SchoolDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "SignInDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "rememberMe": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "isDatabaseActive": {
                    "type": "boolean"
                },
                "isMaintenance": {
                    "type": "boolean"
                }
            }
        },
        "StateDto": {
            "type": "object",
            "properties": {
                "isMaintenance": {
                    "type": "boolean"
                }
            }
        },
        "SubscribeMessageDto": {
            "type": "object",
            "properties": {
                "normalizedName": {
                    "type": "string"
                },
                "subject": {
                    "$ref": "#/definitions/WebSocketSubject"
                }
            }
        },
        "UpdateLocationDto": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UpdateUserDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/Location"
                },
                "role": {
                    "$ref": "#/definitions/Role"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "WebSocketSubject": {
            "type": "string",
            "enum": [
                "all-locations",
                "single-location",
                "state"
            ],
            "x-enum-varnames": [
                "AllLocations",
                "SingleLocation",
                "State"
            ]
        }
    }
}